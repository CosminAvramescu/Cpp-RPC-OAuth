/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#include "tema.h"

bool_t
xdr_tokensPair (XDR *xdrs, tokensPair *objp)
{
	register int32_t *buf;

	 if (!xdr_string (xdrs, &objp->requestToken, ~0))
		 return FALSE;
	 if (!xdr_string (xdrs, &objp->accessToken, ~0))
		 return FALSE;
	 if (!xdr_string (xdrs, &objp->refreshToken, ~0))
		 return FALSE;
	 if (!xdr_int (xdrs, &objp->valability))
		 return FALSE;
	 if (!xdr_string (xdrs, &objp->error, ~0))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_user (XDR *xdrs, user *objp)
{
	register int32_t *buf;

	 if (!xdr_string (xdrs, &objp->userId, ~0))
		 return FALSE;
	 if (!xdr_tokensPair (xdrs, &objp->tokens))
		 return FALSE;
	 if (!xdr_bool (xdrs, &objp->validatedToken))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_handleResource (XDR *xdrs, handleResource *objp)
{
	register int32_t *buf;

	 if (!xdr_string (xdrs, &objp->operation, ~0))
		 return FALSE;
	 if (!xdr_string (xdrs, &objp->resource, ~0))
		 return FALSE;
	 if (!xdr_string (xdrs, &objp->accessToken, ~0))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_userPair (XDR *xdrs, userPair *objp)
{
	register int32_t *buf;

	 if (!xdr_string (xdrs, &objp->userId, ~0))
		 return FALSE;
	 if (!xdr_string (xdrs, &objp->requestToken, ~0))
		 return FALSE;
	return TRUE;
}

bool_t
xdr_resourcesPerm (XDR *xdrs, resourcesPerm *objp)
{
	register int32_t *buf;

	 if (!xdr_string (xdrs, &objp->resource, ~0))
		 return FALSE;
	 if (!xdr_string (xdrs, &objp->permissions, ~0))
		 return FALSE;
	return TRUE;
}
